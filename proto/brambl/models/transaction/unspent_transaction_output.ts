/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.6.1
 * source: brambl/models/transaction/unspent_transaction_output.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../validate/validate";
import * as dependency_2 from "./../address";
import * as dependency_3 from "./../box/value";
import * as pb_1 from "google-protobuf";
export namespace co.topl.brambl.models.transaction {
    export class UnspentTransactionOutput extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: dependency_2.co.topl.brambl.models.LockAddress;
            value?: dependency_3.co.topl.brambl.models.box.Value;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
            }
        }
        get address() {
            return pb_1.Message.getWrapperField(this, dependency_2.co.topl.brambl.models.LockAddress, 1) as dependency_2.co.topl.brambl.models.LockAddress;
        }
        set address(value: dependency_2.co.topl.brambl.models.LockAddress) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_address() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get value() {
            return pb_1.Message.getWrapperField(this, dependency_3.co.topl.brambl.models.box.Value, 2) as dependency_3.co.topl.brambl.models.box.Value;
        }
        set value(value: dependency_3.co.topl.brambl.models.box.Value) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            address?: ReturnType<typeof dependency_2.co.topl.brambl.models.LockAddress.prototype.toObject>;
            value?: ReturnType<typeof dependency_3.co.topl.brambl.models.box.Value.prototype.toObject>;
        }): UnspentTransactionOutput {
            const message = new UnspentTransactionOutput({});
            if (data.address != null) {
                message.address = dependency_2.co.topl.brambl.models.LockAddress.fromObject(data.address);
            }
            if (data.value != null) {
                message.value = dependency_3.co.topl.brambl.models.box.Value.fromObject(data.value);
            }
            return message;
        }
        toObject() {
            const data: {
                address?: ReturnType<typeof dependency_2.co.topl.brambl.models.LockAddress.prototype.toObject>;
                value?: ReturnType<typeof dependency_3.co.topl.brambl.models.box.Value.prototype.toObject>;
            } = {};
            if (this.address != null) {
                data.address = this.address.toObject();
            }
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_address)
                writer.writeMessage(1, this.address, () => this.address.serialize(writer));
            if (this.has_value)
                writer.writeMessage(2, this.value, () => this.value.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UnspentTransactionOutput {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UnspentTransactionOutput();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.address, () => message.address = dependency_2.co.topl.brambl.models.LockAddress.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.value, () => message.value = dependency_3.co.topl.brambl.models.box.Value.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UnspentTransactionOutput {
            return UnspentTransactionOutput.deserialize(bytes);
        }
    }
}
